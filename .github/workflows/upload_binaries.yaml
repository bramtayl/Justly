on:
  release:
    types: [created]
name: Upload binaries
jobs:
  Ubuntu:
    strategy:
      matrix:
        build_type: [Release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.1'
    
    - name: Build
      run: |
        # install-qt-action set Qt6_DIR for us; rename it for cmake
        $env:Qt6_ROOT = $env:Qt6_DIR
        sudo apt install libcsound64-dev
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target Justly
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage ${{github.workspace}}/install/bin/Justly
        RELEASE_ID=$(jq --raw-output ".release.id" "$GITHUB_EVENT_PATH")
        curl -X "POST" -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" --upload-file "${{github.workspace}}/build/Justly-${{ github.event.release.name }}-Linux.tar.gz" --header "Content-Type:application/octet-stream" "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=Justly-${{ github.event.release.name }}-Linux.tar.gz"

  macOS:
    strategy:
      matrix:
        build_type: [Release]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.1'
    
    - name: Build
      run: |
        # install-qt-action set Qt6_DIR for us; rename it for cmake
        $env:Qt6_ROOT = $env:Qt6_DIR
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target Justly
        cd build
        cpack --config CPackConfig.cmake
        cd ..
        RELEASE_ID=$(jq --raw-output ".release.id" "$GITHUB_EVENT_PATH")
        curl -X "POST" -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" --upload-file "${{github.workspace}}/build/Justly-${{ github.event.release.name }}-Darwin.tar.gz" --header "Content-Type:application/octet-stream" "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=Justly-${{ github.event.release.name }}-Darwin.tar.gz"

  Windows:
    strategy:
      matrix:
        build_type: [Release]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.1'

    - name: Build
      run: |
        # install-qt-action set Qt6_DIR for us; rename it for cmake
        $env:Qt6_ROOT = $env:Qt6_DIR
        # install NSIS from scoop for cpack
        iwr -useb get.scoop.sh -outfile 'install.ps1'
        .\install.ps1 -RunAsAdmin
        scoop update
        scoop bucket add extras
        scoop install curl jq nsis csound
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target Justly
        cd build
        cpack --config CPackConfig.cmake
        cd ..
        $env:RELEASE_ID = jq --raw-output ".release.id" "${env:GITHUB_EVENT_PATH}"
        curl.exe -X "POST" -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" --upload-file "${{github.workspace}}/build/Justly-${{ github.event.release.name }}-win64.exe" --header "Content-Type:application/octet-stream" "https://uploads.github.com/repos/${env:GITHUB_REPOSITORY}/releases/${env:RELEASE_ID}/assets?name=Justly-${{ github.event.release.name }}-win64.exe"
