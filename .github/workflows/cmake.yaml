name: cmake

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  Ubuntu:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Test
      run: |
        # Qt6 needs OpenGL
        sudo apt install libgl1-mesa-dev qt6-base-dev libcsound64-dev
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target install
        cd build
        ctest -C ${{matrix.build_type}} --output-on-failure
        cd ..

  macOS:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Test
      run: |
        brew install qt
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target install
        cd build
        ctest -C ${{matrix.build_type}} --output-on-failure
        cd ..
        # only macOS has PortAudio devices during CI, so use it for code coverage
        brew install lcov
        lcov --capture --directory ${{github.workspace}}/build --output-file ${{github.workspace}}/lcov.info

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ${{github.workspace}}/lcov.info
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}

  Windows:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.1'

    - name: Test
      run: |
        # install-qt-action set Qt6_DIR for us; rename it for cmake
        $env:Qt6_ROOT = $env:Qt6_DIR
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DJustly_VERSION='${{ github.event.release.name }}'
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} --target install
        cd build
        ctest -C ${{matrix.build_type}} --output-on-failure
        cd ..