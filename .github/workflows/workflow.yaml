on:
  push:
env:
  instruments_url: "https://ftp.osuosl.org/pub/musescore/soundfont/MuseScore_General"
jobs:
  main_job:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
    - name: Download
      uses: actions/checkout@v3.5.3

    - name: Get xcb-cursor and pulse on ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libxcb-cursor-dev libpulse-dev pulseaudio

    - name: Add MSVC to path on Windows
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Install a virtual soundcard to link to platform sound libraries
      uses: LABSN/sound-ci-helpers@v1
      if: matrix.os != 'macos-latest'

    - name: Install cmake and ninja
      uses: lukka/get-cmake@v3.27.1

    - name: Install Qt
      uses: jurplel/install-qt-action@v3.3.0
      with:
        version: "6.5.1"
        cache: true

    - name: Install winget to get windows pcckages
      if: matrix.os == 'windows-latest'
      uses: Cyberboss/install-winget@v1

    - name: Restore instrument files from the cache if available
      id: cache-instruments
      uses: actions/cache@v1.2.1
      with:
        path: share
        key: ${{matrix.os}}-instruments-cache

    - name: Install vcpkg packages
      uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgGitCommitId: '47364fbc300756f64f7876b549d9422d5f3ec0d3'

    - name: Install winzip and cURL on windows
      if: matrix.os == 'windows-latest'
      run: |
        winget install -e --id Corel.WinZip --accept-source-agreements
        winget install -e --id cURL.cURL

    - name: Download the instruments files if not in the cache
      if: steps.cache-instruments.outputs.cache-hit != 'true'
      run: |
        curl "${{env.instruments_url}}/MuseScore_General.sf2" --output "share/MuseScore_General.sf2"
        curl "${{env.instruments_url}}/MuseScore_General_License.md" --output "share/MuseScore_General_License.md"
    
    - name: Configure, build, test
      run: |
        cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTS=ON -DQt6_ROOT="${{env.Qt6_DIR}}"
        cmake --build build --config Release
        cd build
        ctest --output-on-failure --build_config Release
    
    - name: Package on windows
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        cpack -G ZIP -C Release
    
    - name: Package on unix
      if: matrix.os != 'windows-latest'
      run: |
        cd build
        cpack -G TGZ -C Release

    - name: Release on a new tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: |
          **/Justly-*-*.tar.gz
          **/Justly-*-*.zip

