on:
  push:
env:
  instruments_url: "https://ftp.osuosl.org/pub/musescore/soundfont/MuseScore_General"
jobs:
  main_job:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
    - name: Download with vcpkg submodule
      uses: actions/checkout@v3.5.3
      with:
        submodules: true

    - name: Add MSVC to path on Windows
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Install a virtual soundcard to link to platform sound libraries
      uses: LABSN/sound-ci-helpers@v1

    - name: Install cmake and ninja
      uses: lukka/get-cmake@v3.27.1

    - name: Install Qt
      uses: jurplel/install-qt-action@v3.3.0
      with:
        version: "6.5.1"
        cache: true
    - name: Tell cmake where to find Qt
      if: matrix.os != 'windows-latest'
      run: Qt6_ROOT="${Qt6_DIR}"
    - name: Tell cmake where to find Qt
      if: matrix.os == 'windows-latest'
      run: $env:Qt6_ROOT="${env:Qt6_DIR}"

    - name: Install winget to get winzip
      if: matrix.os == 'windows-latest'
      uses: Cyberboss/install-winget@v1
    - name: Install winzip to zip the package on windows
      if: matrix.os == 'windows-latest'
      run: winget install -e --id Corel.WinZip --accept-source-agreements

    # install xcb-cursor
    - name: Get xcb-cursor for the Qt X11 platform
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libxcb-cursor-dev

    - name: Restore instrument files from the cache if available
      id: cache-instruments
      uses: actions/cache@v1.2.1
      with:
        path: share
        key: ${{matrix.os}}-instruments-cache
    - name: Download the instruments files if not in the cache
      if: steps.cache-instruments.outputs.cache-hit != 'true' && matrix.os != 'windows-latest'
      run: |
        curl "${{env.instruments_url}}/MuseScore_General.sf2" --output "share/MuseScore_General.sf2"
        curl "${{env.instruments_url}}/MuseScore_General_License.md" --output "share/MuseScore_General_License.md"
    - name: Download the instruments files if not in the cache
      if: steps.cache-instruments.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest -Uri "${{env.instruments_url}}/MuseScore_General.sf2" -OutFile "share/MuseScore_General.sf2"
        Invoke-WebRequest -Uri "${{env.instruments_url}}/MuseScore_General_License.md" -OutFile "share/MuseScore_General_License.md"

    - name: Install vcpkg packages
      uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Build with tests
      uses: lukka/run-cmake@v10.6
      with:
        configurePreset: 'configure_with_tests'
        buildPreset: 'build_with_tests'

    - name: Install into a local folder
      run: cmake --install build --prefix "$(pwd)/install"

    - name: Run the installed tests, offscreen because X11 requires a display
      if: matrix.os == 'ubuntu-latest'
      run: QT_QPA_PLATFORM="offscreen" ./install/bin/JustlyTests -v2
    - name: Run the installed tests
      if: matrix.os == 'macos-latest'
      run: ./install/JustlyTests.app/Contents/MacOS/JustlyTests -v2
    - name: Run the installed tests
      if: matrix.os == 'windows-latest'
      run: |
        cd install
        cd bin
        .\JustlyTests.exe -v2
        cd ..
        cd ..

    - name: Remove previous build directory
      if: matrix.os != 'windows-latest'
      run: rm --recursive --force build
    - name: Remove the previous build directory
      if: matrix.os == 'windows-latest'
      run: Remove-Item 'build' -Recurse

    - name: Zip the package
      if: matrix.os == 'windows-latest'
      uses: lukka/run-cmake@v10.6
      with:
        configurePreset: 'default_configure'
        buildPreset: 'default_build'
        packagePreset: 'ZIP'
    - name: Zip the pacakge
      if: matrix.os != 'windows-latest'
      uses: lukka/run-cmake@v10.6
      with:
        configurePreset: 'default_configure'
        buildPreset: 'default_build'
        packagePreset: 'TGZ'

    # release on new tag
    - if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: |
          */Justly-*-*.tar.gz
          */Justly-*-*.zip

