on:
  push:
env:
  instruments_url: "https://ftp.osuosl.org/pub/musescore/soundfont/MuseScore_General"
jobs:
  main_job:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
    - name: Download
      uses: actions/checkout@v4.1.7
    
    - name: Get Qt 
      uses: jurplel/install-qt-action@v4.0.0
      with:
        version: "6.6.3"
        cache: true

    - name: Get xcb-cursor on ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libxcb-cursor0

    - name: Get pulse development files on ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libpulse-dev

    - name: Add MSVC to path on Windows
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Install a virtual soundcard to link to platform sound libraries
      uses: LABSN/sound-ci-helpers@v1.0.2

    - name: Install cmake and ninja
      uses: lukka/get-cmake@v3.29.6

    - name: Install winget to get windows pcckages
      if: matrix.os == 'windows-latest'
      uses: Cyberboss/install-winget@v1

    - name: Install winzip on windows
      if: matrix.os == 'windows-latest'
      run: winget install -e --id Corel.WinZip --accept-source-agreements

    - name: Install cURL on windows
      if: matrix.os == 'windows-latest'
      run: winget install -e --id cURL.cURL

    - name: Restore instrument files from the cache if available
      id: cache-instruments
      uses: actions/cache@v4.0.2
      with:
        path: share
        key: ${{matrix.os}}-instruments-cache

    - name: Install vcpkg packages
      uses: lukka/run-vcpkg@v11.5
      with:
        vcpkgGitCommitId: '47364fbc300756f64f7876b549d9422d5f3ec0d3'

    - name: Download the soundfont if not in the cache
      if: steps.cache-instruments.outputs.cache-hit != 'true'
      run: >
        curl "${{env.instruments_url}}/MuseScore_General.sf2"
        --output "share/MuseScore_General.sf2"

    - name: Download the soundfont license if not in the cache
      if: steps.cache-instruments.outputs.cache-hit != 'true'
      run: >
        curl "${{env.instruments_url}}/MuseScore_General_License.md"
        --output "share/MuseScore_General_License.md"
    
    - name: Configure debug on Linux
      if: matrix.os == 'ubuntu-latest'
      run: >
        cmake -S . -B build
        -DNO_SPEAKERS=ON
        -DTRACK_COVERAGE=ON
        -DBUILD_TESTS=ON
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

    - name: Configure debug on Windows and MacOS
      if: matrix.os != 'ubuntu-latest'
      run: >
        cmake -S . -B build
        -DNO_SPEAKERS=ON
        -DTRACK_COVERAGE=OFF
        -DBUILD_TESTS=ON
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

    - name: Build debug
      run: cmake --build build --config Debug

    - name: Test offscreen on Unix
      if: matrix.os != 'windows-latest'
      run: cd build; QT_QPA_PLATFORM=offscreen ctest --build-config Debug --verbose

    - name: Test on Windows
      if: matrix.os == 'windows-latest'
      run: cd build; ctest --build-config Debug --verbose

    - name: Install pipx on Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install pipx

    - name: Install gcovr on Linux
      if: matrix.os == 'ubuntu-latest'
      run: pipx install gcovr
    
    - name: Run gcovr on Linux
      if: matrix.os == 'ubuntu-latest'
      run: gcovr --exclude "build/.*" --xml "coverage.xml"

    - name: Upload code coverage
      uses: codecov/codecov-action@v4.5.0
      if: matrix.os == 'ubuntu-latest'
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Remove old build folder on unix
      if: matrix.os != 'windows-latest'
      run: rm -rf build

    - name: Remove old build folder on Windows
      if: matrix.os == 'windows-latest'
      run: Remove-Item -Path "build" -Recurse -Force

    - name: Configure release
      run: >
        cmake -S . -B build
        -DNO_SPEAKERS=OFF
        -DTRACK_COVERAGE=OFF
        -DBUILD_TESTS=OFF
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

    - name: Build release
      run: cmake --build build --config Release

    - name: Package on windows
      if: matrix.os == 'windows-latest'
      run: cd build; cpack -G ZIP -C Release
    
    - name: Package on unix
      if: matrix.os != 'windows-latest'
      run: cd build; cpack -G TGZ -C Release

    - name: Release on a new tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2.0.6
      with:
        files: |
          **/Justly-*-*.tar.gz
          **/Justly-*-*.zip

