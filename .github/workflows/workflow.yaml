on:
  push:
env:
  instruments_url: "https://ftp.osuosl.org/pub/musescore/soundfont/MuseScore_General"
jobs:
  main_job:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v3.5.3
      with:
        # make sure to get the vcpkg submodule
        submodules: true
    
    # enable msvc
    - if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    # install virtual soundcard
    - uses: LABSN/sound-ci-helpers@v1

    # get cmake and ninja
    - if: matrix.os == 'windows-latest'
      uses: lukka/get-cmake@v3.27.1

    # install Qt
    - uses: jurplel/install-qt-action@v3.3.0
      with:
        version: "6.5.1"
        cache: true
    - if: matrix.os != 'windows-latest'
      run: Qt6_ROOT="${Qt6_DIR}"
    - if: matrix.os == 'windows-latest'
      run: $env:Qt6_ROOT="${env:Qt6_DIR}"

    # install winzip
    - if: matrix.os == 'windows-latest'
      uses: Cyberboss/install-winget@v1
    - if: matrix.os == 'windows-latest'
      run: winget install -e --id Corel.WinZip --accept-source-agreements

    # install xcb-cursor
    - if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libxcb-cursor-dev

    # install instruments
    - id: cache-instruments
      uses: actions/cache@v1.2.1
      with:
        path: share
        key: ${{matrix.os}}-instruments-cache
    - if: steps.cache-instruments.outputs.cache-hit != 'true' && matrix.os != 'windows-latest'
      run: |
        curl "${{env.instruments_url}}/MuseScore_General.sf2" --output "share/MuseScore_General.sf2"
        curl "${{env.instruments_url}}/MuseScore_General_License.md" --output "share/MuseScore_General_License.md"
    - if: steps.cache-instruments.outputs.cache-hit != 'true' && matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest -Uri "${{env.instruments_url}}/MuseScore_General.sf2" -OutFile "share/MuseScore_General.sf2"
        Invoke-WebRequest -Uri "${{env.instruments_url}}/MuseScore_General_License.md" -OutFile "share/MuseScore_General_License.md"

    # install vcpkg
    - uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgJsonGlob: 'vcpkg.json'

    - uses: lukka/run-cmake@v10.6
      with:
        configurePreset: 'Release'
        buildPreset: 'Release'

    - run: cmake --install build --prefix "$(pwd)/install"

    - if: matrix.os == 'ubuntu-latest'
      run: ./install/bin/JustlyTests
    - if: matrix.os == 'macos-latest'
      run: open install/JustlyTests.app
    - if: matrix.os == 'windows-latest'
      run: ./install/bin/JustlyTests.exe

    - if: matrix.os == 'windows-latest'
      uses: lukka/run-cmake@v10.6
      with:
        packagePreset: 'ZIP'
    - if: matrix.os != 'windows-latest'
      uses: lukka/run-cmake@v10.6
      with:
        packagePreset: 'TGZ'

    # release on new tag
    - if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: "*/Justly-*-*.tar.gz"
    - if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: "*/Justly-*-*.zip"

