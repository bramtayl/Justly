on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
jobs:
  test_job:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug, Release]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v3
    - uses: jurplel/install-qt-action@v3
      with:
        version: "6.5.1"
    - run: git clone --branch "Csound" "https://github.com/bramtayl/vcpkg.git"
    - if: ${{matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
      name: "Unix setup"
      run: |
        Qt6_ROOT="${Qt6_DIR}"
        ./vcpkg/bootstrap-vcpkg.sh
    - if: ${{matrix.os == 'windows-latest'}}
      name: "Windows setup"
      run: |
        $env:Qt6_ROOT="${env:Qt6_DIR}"
        vcpkg/bootstrap-vcpkg.bat
    - if: ${{matrix.os == 'ubuntu-latest'}}
      run: sudo apt install libxcb-cursor-dev
    - run: mkdir "build"
    - run: cmake -S "." -B "build" -DCMAKE_BUILD_TYPE="${{matrix.build_type}}" -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake"
    - run: cmake --build "build" --config "${{matrix.build_type}}" --target "JustlyTests" 
    - if: ${{matrix.os == 'ubuntu-latest'}}
      name: "lcov setup"
      run: |
        sudo apt install lcov
        mkdir "coverage"
        lcov --capture --initial --include "${{github.workspace}}/src/*" --directory "build" --output-file "coverage/initial-lcov.info"
    - run: ctest -C "${{matrix.build_type}}" --test-dir "build" --output-on-failure --no-tests=error
    - name: "run lcov"
      run: |
        lcov --capture --include "${{github.workspace}}/src/*" --directory "build" --output-file "coverage/final-lcov.info"
        lcov --add-tracefile "coverage/initial-lcov.info" --add-tracefile "coverage/final-lcov.info" --output-file "coverage/lcov.info"
    - if: ${{matrix.os == 'ubuntu-latest'}}
      uses: codecov/codecov-action@v3
      with:
        files: "coverage/lcov.info"
        verbose: true
        token: "${{secrets.CODECOV_TOKEN}}"
    - uses: mxschmitt/action-tmate@v3
      if: ${{matrix.os == 'windows-latest' && matrix.build_type == 'Debug'}}
